---
# We need sudo for some of the Docker commands.
sudo: required

#env:
  # Provide a list of OSes we want to use for testing.
env:
  - distro: centos7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distro: centos6
    init: /sbin/init
    run_opts: ""
  - distro: fedora24
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distro: ubuntu1604
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distro: ubuntu1404
    init: /sbin/init
    run_opts: ""
  - distro: debian8
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
							    
# Tell Travis to start Docker when it brings up an environment.
services:
  - docker

before_install:
  # Pull the image from Docker Hub for the OS under test.
  # Pull container from Docker Hub.
    - 'docker pull geerlingguy/docker-${distro}-ansible:latest'

script:
  # Create a random file to store the container ID.
    - container_id=$(mktemp)

  # Run container detached, with our role mounted inside.
#    - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'
    - 'docker run --detach --volume="${PWD}":/Users/milo/Development/ansible_testing_travis_docker/roles/tests:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'
  # Check the role/playbook's syntax.
    - >
        docker exec --tty "$(cat ${container_id})" env TERM=xterm
#	ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml
	ansible-playbook /Users/milo/Development/ansible_testing_travis_docker/roles/tests/test.yml
	--syntax-check
		
  # TODO - Test the Ansible role.

notifications:
  # Notify Ansible Galaxy when a role builds successfully.